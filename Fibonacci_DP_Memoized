//Fibonacci_DP_Memoized
import java.io.*;
import java.util.*;

public class Main{

public static void main(String[] args) throws Exception {
    // write your code here
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int dp[]=new int[n+1];
    System.out.print(memoizedFB(n,dp));
 }

 public static int memoizedFB(int n,int dp[])
 {
     if(n==0||n==1)
     {
         return n;
     }

     if(dp[n]!=0)
     {
         return dp[n];
     }

     int fib1=memoizedFB(n-1,dp);
     int fib2=memoizedFB(n-2,dp);
     int fibn=fib1+fib2;
     dp[n]=fibn;

     return fibn;
 }

}


*********************************************************************************************************

package dp;

import java.util.Scanner;

public class Fibonacci {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int dp[]=new int[n+1];
		for(int i=0;i<dp.length;i++)
		{
			dp[i]=-1;
		}
		System.out.print(fibMemoized(n,dp));
		}
	
	public static int fibMemoized(int n,int dp[])
	{
		if(n==0||n==1)
		{
			return n;
		}
		int fib1,fib2;
		if(dp[n-1]==-1)
		{
			fib1=fibMemoized(n-1,dp);
			dp[n-1]=fib1;
		}
		else
		{
		fib1=dp[n-1];	
		}
		
		if(dp[n-2]==-1)
		{
			fib2=fibMemoized(n-2,dp);
			dp[n-2]=fib2;
		}
		else
		{
			fib2=dp[n-2];
		}
		
		int myAns=fib1+fib2;
		return myAns;
	}

}
